{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"products\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_card_template = _resolveComponent(\"card-template\");\n  const _component_edit_product = _resolveComponent(\"edit-product\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.products_list, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-md-4\",\n      key: index\n    }, [_createVNode(_component_card_template, {\n      item: item\n    }, null, 8 /* PROPS */, [\"item\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_edit_product, {\n    ref: \"editProduct\"\n  }, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$props","products_list","item","index","key","_createVNode","_component_card_template","_component_edit_product","ref"],"sources":["C:\\projectschool\\project-crm\\src\\views\\Catalog.vue"],"sourcesContent":["<template>\r\n  <div class=\"products\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\" v-for=\"(item, index) in products_list\" :key=\"index\">\r\n        <card-template :item=\"item\" />\r\n      </div>\r\n    </div>\r\n    <edit-product ref=\"editProduct\" />\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport CardTemplate from \"../shared/CardTemplate\";\r\nimport EditProduct from \"./actions/EditProduct\";\r\nexport default {\r\n  name: \"productslist\",\r\n  props: [\"products_list\"],\r\n  components: { CardTemplate, EditProduct },\r\n  data() {\r\n    return {\r\n      selectedProduct: Object,\r\n    };\r\n  },\r\n  methods: {\r\n    //manadatory function called from cardTemplate while onClick 'edit'\r\n    editProduct(product) {\r\n      // this.will pass the product to the editProduct to bind with Product Object\r\n      this.$refs.editProduct.setProduct(product);\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>\r\n\r\n<style>\r\n.footerIcons {\r\n  font-size: 95%;\r\n}\r\n.card {\r\n  height: 490px;\r\n}\r\n.card-text {\r\n  height: 70px;\r\n  overflow: hidden;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAK;;;;uBADlBC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHJH,mBAAA,CAEMI,SAAA,QAAAC,WAAA,CAFwCC,MAAA,CAAAC,aAAa,GAA7BC,IAAI,EAAEC,KAAK;yBAAzCT,mBAAA,CAEM;MAFDD,KAAK,EAAC,UAAU;MAAyCW,GAAG,EAAED;QACjEE,YAAA,CAA8BC,wBAAA;MAAdJ,IAAI,EAAEA;IAAI,kC;oCAG9BG,YAAA,CAAkCE,uBAAA;IAApBC,GAAG,EAAC;EAAa,+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}