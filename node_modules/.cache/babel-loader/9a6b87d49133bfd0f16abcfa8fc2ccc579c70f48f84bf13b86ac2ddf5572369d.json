{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VAvatar.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { defineComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'flat'\n  })\n}, 'v-avatar');\nexport const VAvatar = defineComponent({\n  name: 'VAvatar',\n  props: makeVAvatarProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    useRender(() => {\n      var _slots$default;\n      return _createVNode(props.tag, {\n        \"class\": ['v-avatar', {\n          'v-avatar--start': props.start,\n          'v-avatar--end': props.end\n        }, themeClasses.value, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, sizeStyles.value]\n      }, {\n        default: () => [props.image ? _createVNode(VImg, {\n          \"key\": \"image\",\n          \"src\": props.image,\n          \"alt\": \"\",\n          \"cover\": true\n        }, null) : props.icon ? _createVNode(VIcon, {\n          \"key\": \"icon\",\n          \"icon\": props.icon\n        }, null) : (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), genOverlays(false, 'v-avatar')]\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VIcon","VImg","genOverlays","makeVariantProps","useVariant","IconValue","makeDensityProps","useDensity","makeRoundedProps","useRounded","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","defineComponent","propsFactory","useRender","makeVAvatarProps","start","Boolean","end","icon","image","String","variant","VAvatar","name","props","setup","_ref","slots","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","roundedClasses","sizeClasses","sizeStyles","_slots$default","_createVNode","tag","value","default","call"],"sources":["../../../src/components/VAvatar/VAvatar.tsx"],"sourcesContent":["// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'v-avatar')\n\nexport const VAvatar = defineComponent({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          themeClasses.value,\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n        ]}\n      >\n        { props.image\n          ? (<VImg key=\"image\" src={ props.image } alt=\"\" cover />)\n          : props.icon\n            ? (<VIcon key=\"icon\" icon={ props.icon } />)\n            : slots.default?.()\n        }\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n"],"mappings":";AAAA;AACA;;AAEA;AAAA,SACSA,KAAK;AAAA,SACLC,IAAI,6BAEb;AAAA,SACSC,WAAW,EAAEC,gBAAgB,EAAEC,UAAU;AAAA,SACzCC,SAAS;AAAA,SACTC,gBAAgB,EAAEC,UAAU;AAAA,SAC5BC,gBAAgB,EAAEC,UAAU;AAAA,SAC5BC,aAAa,EAAEC,OAAO;AAAA,SACtBC,YAAY;AAAA,SACZC,cAAc,EAAEC,YAAY,uCAErC;AAAA,SACSC,eAAe,EAAEC,YAAY,EAAEC,SAAS;AAEjD,OAAO,MAAMC,gBAAgB,GAAGF,YAAY,CAAC;EAC3CG,KAAK,EAAEC,OAAO;EACdC,GAAG,EAAED,OAAO;EACZE,IAAI,EAAEjB,SAAS;EACfkB,KAAK,EAAEC,MAAM;EAEb,GAAGlB,gBAAgB,EAAE;EACrB,GAAGE,gBAAgB,EAAE;EACrB,GAAGE,aAAa,EAAE;EAClB,GAAGE,YAAY,EAAE;EACjB,GAAGC,cAAc,EAAE;EACnB,GAAGV,gBAAgB,CAAC;IAAEsB,OAAO,EAAE;EAAO,CAAC;AACzC,CAAC,EAAE,UAAU,CAAC;AAEd,OAAO,MAAMC,OAAO,GAAGX,eAAe,CAAC;EACrCY,IAAI,EAAE,SAAS;EAEfC,KAAK,EAAEV,gBAAgB,EAAE;EAEzBW,KAAKA,CAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrB,MAAM;MAAEE;IAAa,CAAC,GAAGlB,YAAY,CAACc,KAAK,CAAC;IAC5C,MAAM;MAAEK,YAAY;MAAEC,WAAW;MAAEC;IAAe,CAAC,GAAG/B,UAAU,CAACwB,KAAK,CAAC;IACvE,MAAM;MAAEQ;IAAe,CAAC,GAAG7B,UAAU,CAACqB,KAAK,CAAC;IAC5C,MAAM;MAAES;IAAe,CAAC,GAAG5B,UAAU,CAACmB,KAAK,CAAC;IAC5C,MAAM;MAAEU,WAAW;MAAEC;IAAW,CAAC,GAAG5B,OAAO,CAACiB,KAAK,CAAC;IAElDX,SAAS,CAAC;MAAA,IAAAuB,cAAA;MAAA,OAAAC,YAAA,CAAAb,KAAA,CAAAc,GAAA;QAAA,SAEC,CACL,UAAU,EACV;UACE,iBAAiB,EAAEd,KAAK,CAACT,KAAK;UAC9B,eAAe,EAAES,KAAK,CAACP;QACzB,CAAC,EACDW,YAAY,CAACW,KAAK,EAClBV,YAAY,CAACU,KAAK,EAClBP,cAAc,CAACO,KAAK,EACpBN,cAAc,CAACM,KAAK,EACpBL,WAAW,CAACK,KAAK,EACjBR,cAAc,CAACQ,KAAK,CACrB;QAAA,SACM,CACLT,WAAW,CAACS,KAAK,EACjBJ,UAAU,CAACI,KAAK;MACjB;QAAAC,OAAA,EAAAA,CAAA,MAEChB,KAAK,CAACL,KAAK,GAAAkB,YAAA,CAAAxC,IAAA;UAAA,OACE,OAAO;UAAA,OAAO2B,KAAK,CAACL,KAAK;UAAA,OAAO,EAAE;UAAA;QAAA,WAC7CK,KAAK,CAACN,IAAI,GAAAmB,YAAA,CAAAzC,KAAA;UAAA,OACI,MAAM;UAAA,QAAQ4B,KAAK,CAACN;QAAI,YAAAkB,cAAA,GACpCT,KAAK,CAACa,OAAO,qBAAbJ,cAAA,CAAAK,IAAA,CAAAd,KAAK,CAAY,EAGrB7B,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC;MAAA;IAAA,CAEnC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}