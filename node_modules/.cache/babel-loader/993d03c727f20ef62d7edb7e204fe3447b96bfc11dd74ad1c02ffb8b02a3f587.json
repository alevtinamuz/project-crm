{"ast":null,"code":"// Utilities\nimport { getCurrentInstance, hasEvent, IN_BROWSER, propsFactory } from \"../util/index.mjs\";\nimport { computed, nextTick, onScopeDispose, resolveDynamicComponent, toRef } from 'vue';\n\n// Types\n\nexport function useRoute() {\n  const vm = getCurrentInstance('useRoute');\n  return computed(() => {\n    var _vm$proxy;\n    return vm == null ? void 0 : (_vm$proxy = vm.proxy) == null ? void 0 : _vm$proxy.$route;\n  });\n}\nexport function useRouter() {\n  var _getCurrentInstance, _getCurrentInstance$p;\n  return (_getCurrentInstance = getCurrentInstance('useRouter')) == null ? void 0 : (_getCurrentInstance$p = _getCurrentInstance.proxy) == null ? void 0 : _getCurrentInstance$p.$router;\n}\nexport function useLink(props, attrs) {\n  const RouterLink = resolveDynamicComponent('RouterLink');\n  const isLink = computed(() => !!(props.href || props.to));\n  const isClickable = computed(() => {\n    return (isLink == null ? void 0 : isLink.value) || hasEvent(attrs, 'click') || hasEvent(props, 'click');\n  });\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href')\n    };\n  }\n  const link = props.to ? RouterLink.useLink(props) : undefined;\n  return {\n    isLink,\n    isClickable,\n    route: link == null ? void 0 : link.route,\n    navigate: link == null ? void 0 : link.navigate,\n    isActive: link && computed(() => {\n      var _link$isExactActive, _link$isActive;\n      return props.exact ? (_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value : (_link$isActive = link.isActive) == null ? void 0 : _link$isActive.value;\n    }),\n    href: computed(() => props.to ? link == null ? void 0 : link.route.value.href : props.href)\n  };\n}\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object],\n  exact: Boolean\n}, 'router');\nlet inTransition = false;\nexport function useBackButton(router, cb) {\n  let popped = false;\n  let removeBefore;\n  let removeAfter;\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate);\n      removeBefore = router == null ? void 0 : router.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next());\n        } else {\n          popped ? cb(next) : next();\n        }\n        inTransition = true;\n      });\n      removeAfter = router == null ? void 0 : router.afterEach(() => {\n        inTransition = false;\n      });\n    });\n    onScopeDispose(() => {\n      var _removeBefore, _removeAfter;\n      window.removeEventListener('popstate', onPopstate);\n      (_removeBefore = removeBefore) == null ? void 0 : _removeBefore();\n      (_removeAfter = removeAfter) == null ? void 0 : _removeAfter();\n    });\n  }\n  function onPopstate(e) {\n    var _e$state;\n    if ((_e$state = e.state) != null && _e$state.replaced) return;\n    popped = true;\n    setTimeout(() => popped = false);\n  }\n}","map":{"version":3,"names":["getCurrentInstance","hasEvent","IN_BROWSER","propsFactory","computed","nextTick","onScopeDispose","resolveDynamicComponent","toRef","useRoute","vm","_vm$proxy","proxy","$route","useRouter","_getCurrentInstance","_getCurrentInstance$p","$router","useLink","props","attrs","RouterLink","isLink","href","to","isClickable","value","link","undefined","route","navigate","isActive","_link$isExactActive","_link$isActive","exact","isExactActive","makeRouterProps","String","replace","Boolean","Object","inTransition","useBackButton","router","cb","popped","removeBefore","removeAfter","window","addEventListener","onPopstate","beforeEach","from","next","setTimeout","afterEach","_removeBefore","_removeAfter","removeEventListener","e","_e$state","state","replaced"],"sources":["../../src/composables/router.tsx"],"sourcesContent":["// Utilities\nimport { getCurrentInstance, hasEvent, IN_BROWSER, propsFactory } from '@/util'\nimport {\n  computed,\n  nextTick,\n  onScopeDispose,\n  resolveDynamicComponent,\n  toRef,\n} from 'vue'\n\n// Types\nimport type { ComputedRef, PropType, Ref, SetupContext } from 'vue'\nimport type {\n  RouterLink as _RouterLink,\n  useLink as _useLink,\n  NavigationGuardNext,\n  RouteLocationNormalizedLoaded,\n  RouteLocationRaw,\n  Router,\n  UseLinkOptions,\n} from 'vue-router'\nimport type { EventProp } from '@/util'\n\nexport function useRoute (): Ref<RouteLocationNormalizedLoaded | undefined> {\n  const vm = getCurrentInstance('useRoute')\n\n  return computed(() => vm?.proxy?.$route)\n}\n\nexport function useRouter (): Router | undefined {\n  return getCurrentInstance('useRouter')?.proxy?.$router\n}\n\nexport interface LinkProps {\n  href: string | undefined\n  replace: boolean | undefined\n  to: RouteLocationRaw | undefined\n  exact: boolean | undefined\n}\n\nexport interface LinkListeners {\n  onClick?: EventProp | undefined\n  onClickOnce?: EventProp | undefined\n}\n\nexport interface UseLink extends Omit<Partial<ReturnType<typeof _useLink>>, 'href'> {\n  isLink: ComputedRef<boolean>\n  isClickable: ComputedRef<boolean>\n  href: Ref<string | undefined>\n}\n\nexport function useLink (props: LinkProps & LinkListeners, attrs: SetupContext['attrs']): UseLink {\n  const RouterLink = resolveDynamicComponent('RouterLink') as typeof _RouterLink | string\n\n  const isLink = computed(() => !!(props.href || props.to))\n  const isClickable = computed(() => {\n    return isLink?.value || hasEvent(attrs, 'click') || hasEvent(props, 'click')\n  })\n\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href'),\n    }\n  }\n\n  const link = props.to ? RouterLink.useLink(props as UseLinkOptions) : undefined\n\n  return {\n    isLink,\n    isClickable,\n    route: link?.route,\n    navigate: link?.navigate,\n    isActive: link && computed(() => props.exact ? link.isExactActive?.value : link.isActive?.value),\n    href: computed(() => props.to ? link?.route.value.href : props.href),\n  }\n}\n\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object] as PropType<RouteLocationRaw>,\n  exact: Boolean,\n}, 'router')\n\nlet inTransition = false\nexport function useBackButton (router: Router | undefined, cb: (next: NavigationGuardNext) => void) {\n  let popped = false\n  let removeBefore: (() => void) | undefined\n  let removeAfter: (() => void) | undefined\n\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate)\n      removeBefore = router?.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next())\n        } else {\n          popped ? cb(next) : next()\n        }\n        inTransition = true\n      })\n      removeAfter = router?.afterEach(() => {\n        inTransition = false\n      })\n    })\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate)\n      removeBefore?.()\n      removeAfter?.()\n    })\n  }\n\n  function onPopstate (e: PopStateEvent) {\n    if (e.state?.replaced) return\n\n    popped = true\n    setTimeout(() => (popped = false))\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}