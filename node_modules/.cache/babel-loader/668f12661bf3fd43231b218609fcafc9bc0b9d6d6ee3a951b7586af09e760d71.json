{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VItemGroup.css\";\n\n// Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { defineComponent } from \"../../util/index.mjs\";\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group');\nexport const VItemGroup = defineComponent({\n  name: 'VItemGroup',\n  props: {\n    ...makeGroupProps({\n      selectedClass: 'v-item--selected'\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      isSelected,\n      select,\n      next,\n      prev,\n      selected\n    } = useGroup(props, VItemGroupSymbol);\n    return () => {\n      var _slots$default;\n      return _createVNode(props.tag, {\n        \"class\": ['v-item-group', themeClasses.value]\n      }, {\n        default: () => [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value\n        })]\n      });\n    };\n  }\n});","map":{"version":3,"names":["makeGroupProps","useGroup","makeTagProps","makeThemeProps","provideTheme","defineComponent","VItemGroupSymbol","Symbol","for","VItemGroup","name","props","selectedClass","emits","value","setup","_ref","slots","themeClasses","isSelected","select","next","prev","selected","_slots$default","_createVNode","tag","default","call"],"sources":["../../../src/components/VItemGroup/VItemGroup.tsx"],"sourcesContent":["// Styles\nimport './VItemGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group')\n\nexport const VItemGroup = defineComponent({\n  name: 'VItemGroup',\n\n  props: {\n    ...makeGroupProps({\n      selectedClass: 'v-item--selected',\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VItemGroupSymbol)\n\n    return () => (\n      <props.tag\n        class={[\n          'v-item-group',\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    )\n  },\n})\n\nexport type VItemGroup = InstanceType<typeof VItemGroup>\n"],"mappings":";AAAA;AACA;;AAEA;AAAA,SACSA,cAAc,EAAEC,QAAQ;AAAA,SACxBC,YAAY;AAAA,SACZC,cAAc,EAAEC,YAAY,uCAErC;AAAA,SACSC,eAAe;AAExB,OAAO,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,GAAG,CAAC,sBAAsB,CAAC;AAElE,OAAO,MAAMC,UAAU,GAAGJ,eAAe,CAAC;EACxCK,IAAI,EAAE,YAAY;EAElBC,KAAK,EAAE;IACL,GAAGX,cAAc,CAAC;MAChBY,aAAa,EAAE;IACjB,CAAC,CAAC;IACF,GAAGV,YAAY,EAAE;IACjB,GAAGC,cAAc;EACnB,CAAC;EAEDU,KAAK,EAAE;IACL,mBAAmB,EAAGC,KAAU,IAAK;EACvC,CAAC;EAEDC,KAAKA,CAAEJ,KAAK,EAAAK,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrB,MAAM;MAAEE;IAAa,CAAC,GAAGd,YAAY,CAACO,KAAK,CAAC;IAC5C,MAAM;MAAEQ,UAAU;MAAEC,MAAM;MAAEC,IAAI;MAAEC,IAAI;MAAEC;IAAS,CAAC,GAAGtB,QAAQ,CAACU,KAAK,EAAEL,gBAAgB,CAAC;IAEtF,OAAO;MAAA,IAAAkB,cAAA;MAAA,OAAAC,YAAA,CAAAd,KAAA,CAAAe,GAAA;QAAA,SAEI,CACL,cAAc,EACdR,YAAY,CAACJ,KAAK;MACnB;QAAAa,OAAA,EAAAA,CAAA,OAAAH,cAAA,GAECP,KAAK,CAACU,OAAO,qBAAbH,cAAA,CAAAI,IAAA,CAAAX,KAAK,EAAW;UAChBE,UAAU;UACVC,MAAM;UACNC,IAAI;UACJC,IAAI;UACJC,QAAQ,EAAEA,QAAQ,CAACT;QACrB,CAAC,CAAC;MAAA;IAAA,CAEL;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}